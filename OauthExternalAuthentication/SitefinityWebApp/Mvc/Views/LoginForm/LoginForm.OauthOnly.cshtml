@model Telerik.Sitefinity.Frontend.Identity.Mvc.Models.LoginForm.LoginFormViewModel

@using Telerik.Sitefinity.UI.MVC;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Services;
@using Microsoft.AspNet.Membership.OpenAuth;
@using Telerik.Sitefinity.Web;

@*Add scripts and stylesheets*@
@Html.Script(ScriptRef.JQuery, "top")
@Html.Script("//ajax.aspnetcdn.com/ajax/jquery.validate/1.8.1/jquery.validate.js", "top")
@Html.Script("//ajax.aspnetcdn.com/ajax/mvc/4.0/jquery.validate.unobtrusive.min.js", "top")
@Html.StyleSheet(Url.EmbeddedResource("OauthExternalAuthentication.Web.UI.OAuthLoginForm", "OauthExternalAuthentication.Web.UI.Styles.Login.css"), "head")

<div class="@Model.CssClass">
    @if (Telerik.Sitefinity.Security.SecurityManager.GetCurrentUserId() == Guid.Empty || SystemManager.IsInlineEditingMode || SystemManager.IsDesignMode)
    {
        <div>
            @using (Html.BeginFormSitefinity(@Request.Url.Query, null, null, FormMethod.Post, null, true))
            {
                //string realm = HttpContext.Current.Request.Url.GetLeftPart(UriPartial.Authority);
                string serviceUrl = Model.ServiceUrl;
                serviceUrl = serviceUrl.Contains("?") ? serviceUrl += "&" : serviceUrl += "?";

                string querystringReturnUrl = HttpContext.Current.Request.QueryString["ReturnUrl"];
                string domainUrl = UrlPath.GetDomainUrl();
                if (querystringReturnUrl != null && querystringReturnUrl.StartsWith(domainUrl))
                {
                    querystringReturnUrl = querystringReturnUrl.Remove(querystringReturnUrl.IndexOf(domainUrl), domainUrl.Length);
                }

                string loginUrl = serviceUrl
                    + "realm=" + HttpUtility.UrlEncode(Model.Realm)
                    + "&redirect_uri=" + HttpUtility.UrlEncode(querystringReturnUrl ?? Model.RedirectUrlAfterLogin)
                    + "&redirect_url_failure=" + HttpUtility.UrlEncode(HttpContext.Current.Request.Url.AbsoluteUri);

                <div id="oAuthProviders">
                    @foreach (var provider in OpenAuth.AuthenticationClients.GetAll())
                    {
                        <div class="form-group">
                            <a href="@string.Concat(loginUrl, "&oaprovider=", provider.ProviderName)" class="oauthloginprovider">
                                <img id="facebook" src="@Url.EmbeddedResource("OauthExternalAuthentication.Web.UI.OAuthLoginForm", "OauthExternalAuthentication.Web.UI.Images." + provider.ProviderName + ".png")" alt="@provider.ProviderName" />
                            </a>
                        </div>
                    }
                </div>
            }
        </div>
    }

    else
    {
        <p>@Html.Resource("AlreadyLoggedIn")</p>
    }
</div>

@Html.Script(Url.WidgetContent("Mvc/Scripts/LoginForm/login-form.js"), "bottom")
